From Message : Define MSGTic
{	
}

From Message : Define MSGWatch
{	
}

From Message : Define MSGInit
{	
}



From Agent : Define TestTimer
{
	//Declare the component of the agent.
	Component:		
		AgentTimerHandle<'Timer'>;
		uint32<'OutText'>;
	End

	Constructor()
		OutText = 0;		
	End
	
	RunTell(MSGInit msg)
		Print("An ",GetName(), ": Init the timer test");
		a = new AgentClockTimer();
		a.SetClock(5000);
		Timer = a.Attach(GetMailer(), new MSGTic());
		Return msg;
	End	

	/*RunTell is a method for carrying out the msg proccessing
	This method is call by the AgentClockTimer. */

	RunTell(MSGTic msg)
		Print("An ",GetName(), ": RunTell(MSGTic msg) hapend");
		Print("An ",GetName(), ": Throw a CAgentWatchTimer");
		OutText = 1;
		a = new AgentWatchTimer();
		a.SetClock(50);
		n = a.Attach(GetMailer(), new MSGWatch());

		//Runs messages must return a value
		Return msg;
	End


	RunTell(MSGWatch msg)
		Print("An ",GetName(), ": RunTell(MSGWatch msg) hapend");
		OutText = 0;

		//Runs messages must return a value
		Return msg;
	End

	//Run() is the proccess of the agent
	Run()
		(OutText != 0) 
		?
				Print("An ",GetName(), ": Run() hapend");		
		End
	End
}

//this the main of the script.
MessageManager()
	Print("Exec Agent TestTimer");
	o = new TestTimer();
	
	//AddChild Alow to add the agent o in the agent manager execution list.
	//In this exemple the to level agent is the manager.
	//Argument is:
	//Name of the agent to add
	//Agent to add
	//optional number of agent to add, if you chos for exemple 5; the first agent added is to o agent then the manager create 4 new agent by clone.
	AddChild('TimerAgent', o);
	o.Send(TELL, new MSGInit());

	//new instance in o
	o = new TestTimer();
	AddChild('OtherAgent', o, 5);

	//Alow to get all 'OtherAgent' in a list.
	z = GetChild('OtherAgent');
	//Broad Cast message for all 'OtherAgent' agent
	z.Send(TELL, new MSGInit());
End