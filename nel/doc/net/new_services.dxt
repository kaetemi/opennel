/**
\page new_service_howto How to create a new service ?

\author Olivier Cado

\subsection new_service_intro Introduction

A service is set of functionnalities provided by a server.
The class NLNET::IService is the base class of all services.

NLNET::IService performs automatically the basic
functionnalities of any service, such as registration
to the Naming Service, server start-up and shutdown.

NLNET::IService is located in NeL, but user-defined services
are located in /code/server.

\subsection new_service How to create a user-defined service ?

-# Create a class inherited from NLNET::IService (optional).
-# Set the default port for your service :
\code
uint16 IService::_DefaultPort = 40000;
\endcode
-# Create an array of callbacks. Example :
\code
void cbProcessConnection( CMessage& message, TSenderId from )
{
	// Process here
}

void cbProcessReceivedMsg( CMessage& message, TSenderId from )
{
	// Process incoming message here
}

TCallbackItem CallbackArray[] =
{
	{ "LOG", cbProcessReceivedMsg },
	{ "C", cbProcessConnection }
};
\endcode
-# Reimplement the methods init(), update() and release()
if you need to (optional).
Before each call to update(), CMsgSocket::update() is
automatically called, so that the server can handle
incoming messages by calling the callbacks.
-# Add in your source file the following line, where
\e CNewService is the name of your class and where
\e NAME is the name of your service :
\code
NLNET_SERVICE_MAIN( CNewService, "NAME" );
\endcode

Note: if your service does nothing else calling your callbacks,
i.e. init(), update() and release() are empty, you don't need
to create a new class : you can use IService directly and
write IService instead of CNewService.

\subsection new_services_examples Examples

See the Logging Service and the Naming Service source code
for an example on how to create a class inherited from
IService.
An example of direct usage of IService can be found
in /code/test/test_rknet.

*/