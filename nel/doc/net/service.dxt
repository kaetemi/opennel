/**
\page service_howto How to create a service ?

\author Olivier Cado, Vianney Lecroart

\date Updated June 7, 2001

\subsection service_intro Introduction

A service is set of functionnalities provided by a server.
The class NLNET::IService is the base class of all services.

NLNET::IService performs automatically the basic
functionnalities of any service, such as registration
to the Naming Service, server start-up and shutdown.

NLNET::IService is located in NeL, but user-defined services
are located in /code/nelns.

\subsection service How to create a user-defined service ?

-# Create a class inherited from NLNET::IService (optional).
-# Create an array of callbacks, called \e CallbackArray. Example :
\code
void cbProcessConnection( CMessage& message, TSockId from, CCallbackNetBase& nb )
{
	// Process here
}

void cbProcessReceivedMsg( CMessage& message, TSockId from, CCallbackNetBase& nb )
{
	// Process incoming message here
}

TCallbackItem CallbackArray[] =
{
	{ "LOG", cbProcessReceivedMsg },
	{ "C", cbProcessConnection }
};
\endcode
-# Reimplement the methods init(), update() and release()
if you need to (optional).
After each call to update(), CNetManager::update() is
automatically called, so that the server can handle
incoming messages (by calling the callbacks) and
flush buffers of outgoing data.
-# Add in your source file the NLNET_SERVICE_MAIN line, with the following arguments :
- The name of your class (or NLNET::IService if you do not inherit from it (*))
- The short name of your service
- Its long name
- The chosen port number (set it to 0 for "auto-assigned by the naming service")
- The callback array

Example:
\code
NLNET_SERVICE_MAIN( CMyService, "MS", "my_service", 0, CallbackArray );
\endcode

(*) Note: if your service does nothing else calling your callbacks,
i.e. init(), update() and release() are empty, you don't need
to create a new class : you can use IService directly and
write IService instead of CMyService.

To run your service, create a file "<service_long_name>.cfg" in the working directory, containing the location of your naming service.

Example: my_service.cfg:
\code
NSHost = "itsalive.nevrax.org";
NSPort = 50000;
\endcode

\subsection services_examples Update rule

Use the \c setUpdateTimeout() to set the quantum of time use for the network update. You are absolutely certain that your \c update()
function will \b not be called \b before this amount of time.

If you set the update timeout value higher than 0, all messages in queues will be process until the time greater than the timeout user \c update() .

If you set the update timeout value to 0, all messages in queues will be process one time before calling the user \c update() .

If you set the update timeout value to -1, only one message will be process one time before calling the user \c update() .

\subsection services_examples Examples

See the nelns services source code for examples on how to create a class inherited from
IService.

*/