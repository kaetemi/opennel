
If you find any bugs use the Nevrax Bug Tracking System :

   <URL:http://www.nevrax.org/bugs/>

If you need any help contact us on the NeL mailing-list :

   <URL:http://www.nevrax.org/mail/>


Requirements
============

   The NeL library need the following libraries :

      - STLPort  4.0   <URL:http://www.stlport.org/>
      - FreeType 2     <URL:http://freetype.sourceforge.net/>
      - Python   1.5   <URL:http://www.python.org/>

   STLPort need to be compiled. NeL is using the SGI iostreams and it require
   the STLPort compilation and a linking of NeL with the STLPort library.

   On a GNU/Linux platform you will need the following libraries and
   softwares :

      - Autoconf       <URL:http://www.gnu.org/software/autoconf/autoconf.html>
      - Automake       <URL:http://www.gnu.org/software/automake/automake.html>
      - Libtool        <URL:http://www.gnu.org/software/libtool/libtool.html>
      - Lex / Flex     <URL:http://www.gnu.org/software/flex/flex.html>
      - Yacc / Bison   <URL:http://www.gnu.org/software/bison/bison.html>
      - Mesa     3.3   <URL:http://www.mesa3d.org/>

   On some OpenGL implementations, you migth have some troubles, coming from
   the <GL/glext.h> file, to get NeL to compile. This file could be missing
   or not up to date. You will find the latest version of this file on SGI's
   website :

      - glext.h        <URL:http://oss.sgi.com/projects/ogl-sample/ABI/glext.h>

   Most of our documentation is done using Doxygen, so you might need it
   to read our prose and our code documentation. If you want have nice
   graphs like dependency graphs, collaboration diagrams, or graphical
   class hierarchy graphs you will need Graphviz :

      - Doxygen        <URL:http://www.stack.nl/~dimitri/doxygen/>
      - Graphviz       <URL:http://www.research.att.com/sw/tools/graphviz/>
   
   Most of these softwares should be already installed on your system or
   provided on your installation disk. 

   The given sofware or library version numbers are the ones that we are
   using. We don't know if it working with other (older or more recent)
   versions of these softwares or libraries. You are welcome to help us
   to define more precisely these informations ;-)


Compilation
===========

   1. Windows compilation
   ----------------------

      The compilation on Windows has been done only with Visual C++ 6.0 SP4.

      You first need to compile STLport and FreeType libraries. It's a quite
      long compilation process, and you should carefully read these libraries
      documentation (at least the README and INSTALL files) before compiling
      and installing them. 

      STLport Compilation :

         - Open a Dos window and go in the STLPort's src directory.

         - Rename or copy the "vc6-unicode.mak" to "Makefile".

         - Execute `nmake clean all` followed by `nmake install`.

      FreeType compilation :

         - You need to intall gmumake and to place it in the PATH.

         - Open a Dos window and go in the FreeType's src directory.

         - Execute `make setup visualc' followed by `make`.

      If your are using your own IDE, you must be sure that the
      src/psaux/psaux.c file is include in the project's files list to
      compile.

      Set up Visual C++ to find the STLPort and FreeType libraries. This
      is done in the [Tools -> Options -> Directories] menu :

         - Add the STLPort include directory to the "Library Files" category.
           The STLPort include *must* be inserted before the microsoft one or
           the compiler will take microsoft STL instead of STLPort STL.
           (use the arrow button to put the STLPort include at the top)
           ex: D:/stlport-4.0/stlport

         - Add the STLPort library directory to the "Library Files" category.
           ex: D:/stlport-4.0/lib

         - Add the FreeType include directory to the "Include Files" category.
           ex: D:/freetype-2.0/include

         - Add the FreeType library directory to the "Library Files" category.
           ex: D:/freetype-2.0/obj

      Open the workspace file "nel.dsw" (in the menu [File -> Workspace]).

      Setup Visual C++ to find the NeL include and library files :

         - Add the NEL include directory to the "Library Files" category.
           ex: D:/test/code/nel/include

         - Add the STLPort library directory to the "Library Files" category.
           ex: D:/test/code/nel/lib


   2. GNU/Linux compilation
   ------------------------

      The compilation on GNU/Linux has been done only on RedHat 6.2 with
      GCC 2.96.

      In the NeL directory do :

         % ./configure --with-stlport=<Path_to_the_stlport_headers_files> \
                       --with-python=<Path_to_the_python_headers_files>
         % make

      The "configure" script must be call with the "--with-stlport" and
      "--with-python" options.
      The option "--with-stlport" allow to override the default STL headers
      and the option "--with-python" tell to the configuration script, where
      to find the Python headers files.

      You migth need to specify the FreeType 2 installation prefix by using
      the "--with-freetype" argument (ex: "/usr/local" will look for the
      header files in "/usr/local/include" and the library files in the
      "/usr/local/lid/ directory).

      To pass additional arguments to the C++ compiler, use the command line :

         % CXXFLAGS=-pipe ./configure --with-stlport=<STLPort_headers_path>

      To get the complete list of arguments of the "configure" script use the
      following command :

         % ./configure --help

      In the case (ex: after a cvs checkout) that you need to rebuild the
      "configure" script and/or the "Makefile.in" files, execute the
      "bootstrap" script in the NeL directory :

         % ./bootstrap


Installation
============

   1. Windows installation
   -----------------------

      Not done yet.


   2. GNU/Linux installation
   --------------------------

      % make install


