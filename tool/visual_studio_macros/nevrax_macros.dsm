' visual_studio_macros.dsm
'
' Copyright (C) 2000 Nevrax. All rights reserved.
'
' The redistribution, use and modification in source or binary forms of
' this software is subject to the conditions set forth in the copyright
' document ("Copyright") included with this distribution.
'
'------------------------------------------------------------------------------
' FILE DESCRIPTION: Nevrax Visual Studio macro file
' $Id: nevrax_macros.dsm,v 1.1 2000/08/02 14:13:09 cado Exp $
' This are not many comments, sorry !
'------------------------------------------------------------------------------


' *** NevraxNewClass ***


' NevraxInsertFileHeader
' Utility Sub for NevraxNewClass()
' Author : Olivier Cado
Sub NevraxInsertFileHeader( filename )
	ActiveDocument.Selection.StartOfDocument
	ActiveDocument.Selection = _
		"/* " + filename + vbLf + _
		" *" + vbLf + _
		" * Copyright (C) 2000 Nevrax. All rights reserved." + vbLf + _
		" *" + vbLf + _
		" * The redistribution, use and modification in source or binary forms of" + vbLf + _
		" * this software is subject to the conditions set forth in the copyright" + vbLf + _
		" * document (""Copyright"") included with this distribution." + vbLf + _
		" */" + vbLf + vbLf + _
		"/*" + vbLf + _
		" * $Id: nevrax_macros.dsm,v 1.1 2000/08/02 14:13:09 cado Exp $" + vbLf + _
		" *" + vbLf + _
		" * <Replace this by a description of the file>" + vbLf + _
		" */" + vbLf
End Sub


Function IsUpCase( str )
	IsUpcase = ( str = Ucase(str) )
End Function


' NevraxClassNameToFileName
' Utility Function for NevraxNewClass()
' 1/08/2000 : now analyses the first character
' Author : Olivier Cado
Function NevraxClassNameToFileName( classname )
	beginningpos = 1
	first = left(classname,1)
	if ((first="C") or (first="E") or (first="I")) then
		if len(classname)>1 then
			if IsUpCase( mid(classname,2,1) ) then
				beginningpos = 2
			end if
		end if
	end if
	filename = lcase(mid(classname,beginningpos,1))
	for i = beginningpos+1 to len( classname )
		charact = mid(classname,i,1 )
		if IsUpCase( charact ) then
			if i+1 <= len( classname ) then
				if not IsUpCase( mid(classname,i+1,1) ) then
					filename = filename + "_"
				end if
			else
				filename = filename + "_"
			end if
		end if
		filename = filename + lcase(charact)
	next
	NevraxClassNameToFileName = filename
End Function


' Global variable
Dim CurrentDirectoryName

' NevraxNewClass
' DESCRIPTION: Wizard for new class creation
' 1/08/2000 : added input boxes for directories
' Author : Olivier Cado
Sub NevraxNewClass()

	' Input class name and file name
	ClassName = InputBox( "Bienvenue dans l'assistant de création de classe." + vbLf + vbLf + _
		"Nom de la nouvelle classe :", "Nouvelle classe (1)" )
	if ClassName = "" then
		Exit Sub
	end if
	Filename = NevraxClassNameToFileName( ClassName )
	Filename = InputBox( "Nom de fichier sans l'extension:", "Nouvelle classe (2)", Filename )
	if Filename = "" then
		Exit Sub
	end if
	UniqueName = "NL_" + UCase( Filename ) + "_H"
	HFilename = Filename + ".h"
	CppFilename = Filename + ".cpp"

	' Directories (NB: input boxes cannot be canceled in this part)
	SrcDirectory = "R:\code\nel\src"
	SrcDirectory = InputBox( "Répertoire racine (existant) des sources (.cpp) :","Nouvelle classe (3)", SrcDirectory )
	if SrcDirectory <> "" then
		if right(SrcDirectory,1)<>"\" then
			SrcDirectory = SrcDirectory + "\"
		end if
	else
		IncDirectory = ""
	end if
	IncDirectory = "R:\code\nel\include\nel"
	IncDirectory = InputBox( "Répertoire racine (existant) des include (.h) :","Nouvelle classe (4)", IncDirectory )
	if (IncDirectory<>"") and (right(IncDirectory,1)<>"\") then
		IncDirectory = IncDirectory + "\"
	end if
	CurrentDirectoryName = InputBox( "Nom du répertoire de travail (existant dans " + SrcDirectory + _
		" et dans " + IncDirectory + ") ; ce nom restera mémorisé :", "Nouvelle classe (5)", CurrentDirectoryName )
	if CurrentDirectoryName<>"" then
		CurrentDirectoryDir = CurrentDirectoryName + "\"
	end if
	If InStr( IncDirectory, "nel" ) then
		ShortIncDir = "nel/" + CurrentDirectoryName + "/"
	end if

	' Input ancestor class name and file name
	NoAncestor = "NO BASE CLASS"
	AncClassName = InputBox( "Nom de la classe de base :", "Nouvelle classe (6)", NoAncestor )
	if AncClassName = "" then
		Exit Sub
	else
		if AncClassName = NoAncestor then
			AncClassName = ""
		else
			AncFilename = InputBox( "Nom de fichier (avec chemin) sans l'extension:", "Nouvelle classe (7)" )
			if AncFileName = "" then
				Exit Sub
			end if
			AncHFilename = AncFilename + ".h"
		end if
	end if
	
	' Write .cpp
	Documents.Add( "Text" )
	NevraxInsertFileHeader( CppFilename )
	ActiveDocument.Selection = vbLf + "#include """ + ShortIncDir + HFilename + """" + vbLf + vbLf + vbLf
	ActiveDocument.Selection = "/*" + vbLf + _
		" * Constructor" + vbLf + _
		" */" + vbLf + _
		ClassName + "::" + ClassName + "()" + vbLf + _
		"{" + vbLf + _
		"}" + vbLf + vbLf + vbLf
	ActiveDocument.Save( SrcDirectory + CurrentDirectoryDir + CppFilename )
	ActiveProject.AddFile( SrcDirectory + CurrentDirectoryDir + CppFilename )

	' Write .h
	Documents.Add( "Text" )
	NevraxInsertFileHeader( HFilename )
	ActiveDocument.Selection = vbLf + "#ifndef " + UniqueName + vbLf + _
		"#define " + UniqueName + vbLf + vbLf
	if AncClassName <> "" then
		ActiveDocument.Selection = "#include """ + AncHFilename + """" + vbLf + vbLf
	end if
	ActiveDocument.Selection = vbLf + _
		"/**" + vbLf + _
		" * <Replace this by a description of the class>" + vbLf + _
		" * \author Olivier Cado" + vbLf + _
		" * \author Nevrax France" + vbLf + _
		" * \date 2000" + vbLf + _
		" */" + vbLf + _
		"class " + ClassName
	if AncClassName <> "" then
		ActiveDocument.Selection = " : public " + AncClassName
	end if
	ActiveDocument.Selection = vbLf + _
		"{" + vbLf + _
		"public:" + vbLf + vbLf + _
		"	/// Constructor" + vbLf + _
		"	" + ClassName + "();" + vbLf + vbLf + _
		"};" + vbLf + vbLf
	ActiveDocument.Selection = "#endif // " + UniqueName + vbLf
	ActiveDocument.Selection = vbLf + "/* End of " + HFilename + " */" + vbLf
	ActiveDocument.Save( IncDirectory + CurrentDirectoryDir + HFilename )
	ActiveProject.AddFile( IncDirectory + CurrentDirectoryDir + HFilename )

End Sub

' *** End of NevraxNewClass ***


' ** NevraxToggleHCPP

' NevraxToggleHCPP
' DESCRIPTION: Opens the .cpp or .h file (toggles) for the current document.
' NOTE: Can be used in conjunction with NevraxNewClass (NevraxToggleHCPP uses the CurrentDirectoryName global variable)
' TIP: Bind this macro to Ctrl+<
' Author : Olivier Cado
Sub NevraxToggleHCPP()

	' Get filename extension and ensure it is .h or .cpp
	ActFilename = ActiveDocument.FullName
	pos = InstrRev( ActFilename, "." )
	if ( pos <> 0 ) then
		Ext = mid(ActFilename,pos)		
		if (Ext<>".h" and Ext<>".cpp") then
			msgbox( "Error : Active document is not a .cpp or .h file" )
			exit sub
		end if
	else
		exit sub
	end if
	
	' Build the alternative filename
	NewFilename = ""
	if InStr(ActFilename,"nel")<>0 then
		if Ext = ".h" then
			NewFilename = "R:\code\nel\src\"
		else
			NewFilename = "R:\code\nel\include\nel\"
		end if
		if CurrentDirectoryName="" then ' if CurrentDirectoryName not initialized (see NevraxNewClass)
			CurrentDirectoryName = left( ActFilename, InstrRev(ActFilename,"\")-1 )
			CurrentDirectoryName = mid( CurrentDirectoryName, InstrRev(CurrentDirectoryName, "\")+1 )
		end if
		NewFilename = NewFilename + CurrentDirectoryName + "\" 
		ShortFilenameDot = mid( ActFilename, InstrRev(ActFilename,"\")+1 )
	else
		ShortFilenameDot = ActFilename
	end if
	ShortFilenameDot = left( ShortFilenameDot, Instr(ShortFilenameDot,".") )
	if Ext=".h" then
		Ext = "cpp"
	else
		Ext = "h"
	end if
	NewFilename = NewFilename + ShortFilenameDot + Ext
 
	' Open the alternative file
	Documents.Open( NewFilename )
End Sub
