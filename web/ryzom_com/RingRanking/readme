Produit RingRanking

Objectif:
Le but de se produit est de fournir 3 classements selon le nombre de points.
- classement des scenarios
- classement des auteurs
- classement des Owners (les joueurs ayant lancer la session)



*Techniques:

Plusieurs methode sont possibles:
- l'une attaque la base de donnée en temps réelle
- l'autre attaque la base de donnée à intervalle régulier (1/jour)

La base interrogé étant mis à jour toute les 24h, on va préféré la 2eme solution.


*Archetype:

L'objet """AuthorsRanking"""
- Possede une propiété "AM" pour differentier un auteur, d'un animateurs
- Possede une fonction de mise à jour ('update')
- Stock le résultat dans un dictionnaire sous la forme: "{rang:{rang,nom,guild,pioneer,score_am,score_author}"
(la fonction getRanking permettant de récuperer celui-ci pour le page template)

L'objet """ScenarioRanking"""
- Possede une propiété "Masterless" pour differentier le classement des scénarios scriptés, des scénarios animés.
- Possede une fonction de mise à jour ('update')
- Stock le résultat dans un dictionnaire sous la forme:
"{rang:{rang,title,description,author,score,language,orientation,level,average_time}"
(la fonction getRanking permettant de récuperer celui-ci pour le page template)

Les objets AuthorsRanking,ScenarioRanking, sont quasi-identiques.
Leurs principales différences sont:
- la(les) requête(s) qu'ils executent pour se mettre à jour.
- la façons d'interpréter les données


L'objet """RingRanking""" est un conteneur qui possède quelque fonction particulière:
- lors de la création, il crée 4 objets:
     AuthorsRanking,AMRanking,ScenarioMasterlessRanking, ScenarioMasteredRanking
- il peut mettre à jour tout les objets qu'il contient. ("updateAllRank")



*Fonctionnement:

Une fois installer, la mise à jour de RingRanking est gerer automatiquement par
portal_maintenance.



*reste à faire
(dans le désordre)
- requête pour chaque classement   ===> ok
- création du dico {rank:{info}}   ===> ok
- ajout automatique dans portal_maintenance ===> ok
- les pages de vues
     - scenario ===> ok
     - auteur ===> ok
     - conteneur ===> (on garde la vue par defaut pour le moment)
- i18nisation du produit
     - author ===> ok
     - scenario ===> ok
     - conteneur ===> non necessaire
     - schema ===> necessaire uniquement pour le schéma du conteneur ===> ok
- filtrage par langues des auteurs ===> ok
- filtrage par langues des scénarios ===> lorsque j'aurais les identificateurs de chaque langue
- (option feignass) premiere maj automatique

